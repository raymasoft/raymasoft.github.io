{"version":3,"sources":["webpack:///../theme-features/src/Templates/Features.js","webpack:///../theme-features/src/Components/Layout.js"],"names":["Features","data","pageContext","markdownNodes","allMarkdownRemark","nodes","sort","a","b","Date","parent","birthTime","frontmatter","order","templateIcon","allFeatureImages","filter","image","name","faqs","title","imageUrl","allFile","length","publicURL","alt","fluid","childImageSharp","className","map","node","icon","to","fields","slug","data-aos","key","id","videoName","src","width","height","style","fontSize","textAlign","query","Layout"],"mappings":"8FAAA,+HA8CeA,UAxCE,SAAC,GAA2B,IAAzBC,EAAwB,EAAxBA,KAAMC,EAAkB,EAAlBA,YAClBC,EAAgBF,EAAKG,kBAAkBC,MAC1CC,MAAK,SAACC,EAAGC,GAAJ,OAAU,IAAIC,KAAKF,EAAEG,OAAOC,WAAa,IAAIF,KAAKD,EAAEE,OAAOC,cAChEL,MAAK,SAACC,EAAGC,GAAJ,OAAUD,EAAEK,YAAYC,MAAQL,EAAEI,YAAYC,SAChDC,EAAeb,EAAKc,iBAAiBV,MAAMW,QAAO,SAAAC,GAAK,MAAmB,UAAfA,EAAMC,QAAkB,GACzF,OACE,kBAAC,IAAD,CAAQC,KAAMjB,EAAYiB,MACxB,kBAAC,IAAD,CAAKC,MAAOlB,EAAYkB,MAAOC,SAAwC,IAA9BpB,EAAKqB,QAAQjB,MAAMkB,QAAgBtB,EAAKqB,QAAQjB,MAAM,GAAGmB,UAAWL,KAAMjB,EAAYiB,OAChG,IAA9BlB,EAAKqB,QAAQjB,MAAMkB,QAAgB,kBAAC,IAAD,CAAKE,IAAI,WAAWC,MAAOzB,EAAKqB,QAAQjB,MAAM,GAAGsB,gBAAgBD,QACrG,yBACEE,UAAU,sFACTzB,EAAiBA,EAAc0B,KAAI,SAAAC,GACpC,IAAMC,EAAoG,IAA7F9B,EAAKc,iBAAiBV,MAAMW,QAAO,SAAAC,GAAK,OAAIa,EAAKlB,YAAYmB,OAASd,EAAMC,QAAMK,OAC3FtB,EAAKc,iBAAiBV,MAAMW,QAAO,SAAAC,GAAK,OAAIa,EAAKlB,YAAYmB,OAASd,EAAMC,QAAM,GAAKJ,EAC1F,OAAO,kBAAC,OAAD,CAAMkB,GAAE,YAAcF,EAAKG,OAAOC,KAAQN,UAAU,MAC1DO,WAAS,UAAUC,IAAKN,EAAKO,IAC3B,yBAAKD,IAAKN,EAAKlB,YAAY0B,WACzB,6BACE,6BACE,6BACE,yBAAKV,UAAU,oCAAoCQ,IAAKN,EAAKG,OAAOC,MAClE,yBAAKN,UAAU,oBACXW,IAAKR,EAAKP,UACVC,IAAKK,EAAKlB,YAAYQ,MACtBoB,MAAM,MAAMC,OAAO,SAGzB,wBAAIb,UAAU,gBAAgBc,MAAO,CAACC,SAAS,GAAIC,UAAU,WAAYd,EAAKlB,YAAYQ,eAOpG,yBAAKQ,UAAU,mDAAf,iCAQH,IAAMiB,EAAK,c,kCChDlB,0BAGeC,MAAf","file":"component---theme-features-src-templates-features-js-1a54ce502c8a8fe25b50.js","sourcesContent":["import React from \"react\";\nimport Layout from \"../Components/Layout\";\nimport { graphql, Link } from \"gatsby\";\nimport { SEO } from \"theme-seo\";\nimport Img from \"gatsby-image\";\n\nconst Features = ({ data, pageContext }) => {\n  const markdownNodes = data.allMarkdownRemark.nodes\n    .sort((a, b) => new Date(a.parent.birthTime) - new Date(b.parent.birthTime))\n    .sort((a, b) => a.frontmatter.order - b.frontmatter.order);\n  const templateIcon = data.allFeatureImages.nodes.filter(image => image.name === \"video\")[0]\n  return (\n    <Layout faqs={pageContext.faqs}>\n      <SEO title={pageContext.title} imageUrl={data.allFile.nodes.length !== 0 && data.allFile.nodes[0].publicURL} faqs={pageContext.faqs} />\n      {data.allFile.nodes.length !== 0 && <Img alt=\"features\" fluid={data.allFile.nodes[0].childImageSharp.fluid}/>}\n      <div\n        className=\"flex flex-wrap my-24 justify-center lg:flex-row w-10/12 lg:w-5/6 mx-auto shadow-xl\">\n        {markdownNodes ? (markdownNodes.map(node => {\n        const icon = data.allFeatureImages.nodes.filter(image => node.frontmatter.icon === image.name).length === 1  ?\n            data.allFeatureImages.nodes.filter(image => node.frontmatter.icon === image.name)[0] : templateIcon\n         return <Link to={`/features${node.fields.slug}`} className=\"m-1\"\n          data-aos=\"fade-up\" key={node.id}>\n            <div key={node.frontmatter.videoName}>\n              <div>\n                <div>\n                  <div>\n                    <div className=\"shadow-md m-4 p-2 hover:shadow-xl\" key={node.fields.slug}>\n                      <img className=\"m-auto w-40 h-40 \"\n                          src={icon.publicURL}\n                          alt={node.frontmatter.title}\n                          width=\"100\" height=\"100\"\n                      />\n                    </div>\n                    <h4 className=\"text-gray-700\" style={{fontSize:14, textAlign:\"center\"}}>{node.frontmatter.title}</h4>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </Link>\n        })) : (\n          <div className=\"m-auto text-purple-600 my-10 font-bold text-4xl\">There is no videos to show</div>)}\n      </div>\n    </Layout>\n  );\n};\n\nexport default Features;\n\nexport const query = graphql`\nquery allVideos {\n  allMarkdownRemark(filter: {fileAbsolutePath: {regex: \"/feature/\"  }})\n   {\n    nodes {\n      html\n      fields {\n        slug\n      }\n      frontmatter {\n        videoName\n        description\n        title\n        icon\n        order\n      }\n      parent {\n          ... on File {\n            birthTime(formatString: \"MM/DD/YYYY\")\n          }\n        }\n    }\n  }\n\n  allFeatureImages:allFile(filter: { sourceInstanceName: { eq: \"feature\" }, extension:{eq: \"svg\"} }) {\n    nodes {\n      name\n      publicURL\n      childImageSharp {\n        fixed(width:1200){\n         src\n         }\n       }\n    }\n  }\n\n  allFile(filter: { sourceInstanceName: { eq: \"feature\" }, extension:{eq: \"jpg\"}, name:{eq:\"feature\"}}) {\n    nodes {\n      name\n      publicURL\n      childImageSharp {\n        fluid (maxWidth: 2500 ) {\n          ...GatsbyImageSharpFluid\n        }\n       }\n    }\n  }\n}`;","import React from \"react\";\nimport { Layout } from \"theme-layout\";\n\nexport default Layout;\n"],"sourceRoot":""}