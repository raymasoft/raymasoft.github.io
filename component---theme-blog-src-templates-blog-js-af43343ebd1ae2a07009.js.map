{"version":3,"sources":["webpack:///../theme-blog/src/Components/Layout.js","webpack:///../theme-blog/src/Templates/Blog.js"],"names":["Layout","Blog","data","pageContext","sortedPosts","allMarkdownRemark","nodes","title","className","map","node","to","fields","slug","data-aos","key","id","allFile","filter","n","name","frontmatter","icon","length","width","height","src","publicURL","dangerouslySetInnerHTML","__html","excerpt","query"],"mappings":"6FAAA,0BAGeA,MAAf,G,oCCHA,sHAwDeC,UAlDF,SAAC,GAA2B,IAAzBC,EAAwB,EAAxBA,KAAMC,EAAkB,EAAlBA,YACdC,EAAcF,EAAKG,kBAAkBC,MAC3C,OACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAKC,MAAOJ,EAAYI,QACxB,yBAAKC,UAAU,iCACZJ,EAAYK,KAAI,SAACC,GAAD,OACf,kBAAC,OAAD,CACEC,GAAE,QAAUD,EAAKE,OAAOC,KACxBL,UAAU,iFACVM,WAAS,UACTC,IAAKL,EAAKM,IAEV,yBAAKR,UAAU,yBACZN,EAAKe,QAAQX,MAAMY,QAAO,SAACC,GAAD,OAAOA,EAAEC,OAASV,EAAKW,YAAYC,QAAMC,OAAS,GAC3E,yBACEf,UAAU,0DACVgB,MAAM,MACNC,OAAO,MACPC,IACExB,EAAKe,QAAQX,MAAMY,QAAO,SAACC,GAAD,OAAOA,EAAEC,OAASV,EAAKW,YAAYC,QAAM,GAAGK,YAI5E,6BACE,yBAAKnB,UAAU,WACb,uBAAGA,UAAU,6DACVE,EAAKW,YAAYd,QAGtB,yBACEC,UAAU,2BACVoB,wBAAyB,CACvBC,OAAQnB,EAAKW,YAAYS,QAAUpB,EAAKW,YAAYS,QAAUpB,EAAKoB,YAIzE,yBAAKtB,UAAU,0CACb,yBAAKA,UAAU,wJAAf,kBAcT,IAAMuB,EAAK","file":"component---theme-blog-src-templates-blog-js-af43343ebd1ae2a07009.js","sourcesContent":["import React from \"react\";\nimport { Layout } from \"theme-layout\";\n\nexport default Layout;\n","import React from \"react\";\nimport { graphql, Link } from \"gatsby\";\nimport Layout from \"../Components/Layout\";\nimport Img from \"gatsby-image\";\nimport { SEO } from \"theme-seo\";\n\nconst Blog = ({ data, pageContext }) => {\n  const sortedPosts = data.allMarkdownRemark.nodes;\n  return (\n    <Layout>\n      <SEO title={pageContext.title} />\n      <div className=\"w-10/12 lg:w-4/5 mx-auto py-1\">\n        {sortedPosts.map((node) => (\n          <Link\n            to={`/blog${node.fields.slug}`}\n            className=\"flex flex-col lg:block my-10 p-6 w-full text-right hover:bg-gray-100 shadow-md\"\n            data-aos=\"fade-up\"\n            key={node.id}\n          >\n            <div className=\"lg:flex justify-start\">\n              {data.allFile.nodes.filter((n) => n.name === node.frontmatter.icon).length > 0 && (\n                <img\n                  className=\"my-4 mx-auto lg:m-0 bg-white lg:ml-6  shadow-md rounded\"\n                  width=\"150\"\n                  height=\"150\"\n                  src={\n                    data.allFile.nodes.filter((n) => n.name === node.frontmatter.icon)[0].publicURL\n                  }\n                />\n              )}\n              <div>\n                <div className=\"text-xl\">\n                  <p className=\"pt-1 pb-8 text-gray-700 text-center lg:text-right text-xl\">\n                    {node.frontmatter.title}\n                  </p>\n                </div>\n                <div\n                  className=\" text-gray-700 text-base\"\n                  dangerouslySetInnerHTML={{\n                    __html: node.frontmatter.excerpt ? node.frontmatter.excerpt : node.excerpt,\n                  }}\n                />\n              </div>\n              <div className=\"lg:hidden flex justify-end clear-both \">\n                <div className=\"m-2 w-1/3 border-2 bg-gray-200  hover:bg-gray-300 text-gray-600 text-center font-bold py-2 px-4 rounded-full rounded-bl-none lg:w-1/6 text-gray-300 \">\n                  ادامه\n                </div>\n              </div>\n            </div>\n          </Link>\n        ))}\n      </div>\n    </Layout>\n  );\n};\n\nexport default Blog;\n\nexport const query = graphql`\n  {\n    allMarkdownRemark(\n      filter: { fileAbsolutePath: { regex: \"/post/\" } }\n      sort: { order: DESC, fields: [frontmatter___date] }\n      limit: 100\n    ) {\n      nodes {\n        id\n        html\n        excerpt(pruneLength: 200, format: PLAIN, truncate: true)\n        frontmatter {\n          date(formatString: \"MMMM DD, YYYY\")\n          title\n          icon\n          excerpt\n        }\n        fields {\n          slug\n        }\n      }\n    }\n\n    allFile(filter: { sourceInstanceName: { eq: \"post\" }, extension: { ne: \"md\" } }) {\n      nodes {\n        name\n        publicURL\n        extension\n      }\n    }\n  }\n`;\n"],"sourceRoot":""}